/**
 * This file was automatically generated by Nexus 0.11.3
 * Do not make changes to this file directly
 */




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Image: { // root type
    height: number; // Int!
    url: string; // String!
    width: number; // Int!
  }
  Images: { // root type
    thumbnail: NexusGenRootTypes['Image']; // Image!
  }
  InstagramItem: { // root type
    filter: string; // String!
    id: string; // ID!
    images: NexusGenRootTypes['Images']; // Images!
    link: string; // String!
  }
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  Image: { // field return type
    height: number; // Int!
    url: string; // String!
    width: number; // Int!
  }
  Images: { // field return type
    lowResolution: NexusGenRootTypes['Image']; // Image!
    standartResolution: NexusGenRootTypes['Image']; // Image!
    thumbnail: NexusGenRootTypes['Image']; // Image!
  }
  InstagramItem: { // field return type
    comments: number; // Int!
    filter: string; // String!
    id: string; // ID!
    images: NexusGenRootTypes['Images']; // Images!
    likes: number; // Int!
    link: string; // String!
  }
  Query: { // field return type
    instagram: NexusGenRootTypes['InstagramItem'][]; // [InstagramItem!]!
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Image" | "Images" | "InstagramItem" | "Query";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}